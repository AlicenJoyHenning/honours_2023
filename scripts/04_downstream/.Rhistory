print('the bitch is back')
Print('Hello')
print('Hello')
install.packages("shiny")
install.packages("learnr")
2+2
"hello"
hello
# Introduction to R and Tidyverse Tutorial
# storing variables
hello = "hello my name is not Mark"
hello
hello
av <- available.packages()
install.packages("TENxPBMCData")
av <- available.packages(filters=list())
av[av[, "Package"] == pkg, ]
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TENxPBMCData")
install.packages("TENxPBMCData")
library(TENxPBMCData)
new.data <- TENxPBMCData("pbmc4k")
install.packages("celldex")
new.data
BiocManager::install("celldex")
library(celldex)
ref.data <- HumanPrimaryCellAtlasData(ensembl=TRUE)
BiocManager::install("ensembldb")
ref.data <- HumanPrimaryCellAtlasData(ensembl=TRUE)
BiocManager::install("SingleR")
library(SingleR)
predictions <- SingleR(test=new.data, assay.type.test=1, ref=ref.data, labels=ref.data$label.main)
table(predictions$labels)
saveRDS(table(predictions$labels), file = "pbmcc4_output")
saveRDS(table(predictions$labels), file = "/c/Users/alice/Git/scripts/04_downstream/pbmcc4_output"
)
pwd
getwd
setwd("Git/scripts/04_downstream/")
saveRDS(table(predictions$labels), file = "pbmcc4_output")
save.image(table(predictions$labels), file = "pbmcc4_output")
write.csv(table(predictions$labels), "pbmcc$_output", row.names = FALSE)
write.csv(table(predictions$labels), "pbmcc4_output", row.names = FALSE)
write.csv(table(predictions$labels), "pbmcc4_output", row.names = FALSE)
saveRDS(table(predictions$labels), file = "pbmcc4_output")
saveRDS(table(predictions$labels), file = "pbmcc4_Routput")
write.csv(table(predictions$labels), "pbmcc$_output", row.names = FALSE)
write.csv(table(predictions$labels), "pbmcc4_table_output", row.names = FALSE)
pbmc68k_test <- TENxPBMCData("pbmc68k")
pbmc68k_predictions <- SingleR(test=pbmc68k_test, assay.type.test=1, ref=ref.data, labels=ref.data$label.fine)
write.csv(table(pbmc68k_predictions$labels), "pbmcc4_table_output", row.names = FALSE)
saveRDS(table(pbmc68k_predictions$labels), file = "pbmcc4_Routput")
BiocManager::install("scRNAseq")
library(scRNAseq)
HSC.data <- scRNAseq(ensembl=TRUE)
HSC.data <- GrunHSCData(ensembl=TRUE)
HSC.data <- GrunHSCData(ensembl=TRUE)
immgen <- ImmGenData(ensembl=TRUE)
immgen
head(immgen$label.fine)
HSC.predictions <- SingleR(test=HSC.data, assay.type.test=1, ref= immgen, labels=ref.data$label.fine)
HSC.predictions <- SingleR(test=HSC.data, ref=immgen,labels=immgen$label.fine,assay.type.test=1)
table(HSC.predictions$scores)
table(HSC.predictions$labels)
head(sort(table(HSC.predictions$labels), decreasing = TRUE))
View(as.data.frame(colData(HSC.data)))
View(as.data.frame(colData(immgen)))
View(as.data.frame(colData(ref.data)))
counts <- GetAssayData(new.data, slot = 'counts')
BiocManager::install(c("Biobase", "SummarizedExperiment"))
counts <- GetAssayData(new.data, slot = 'counts')
library(Biobase)
library(SummarizedExperiment)
counts <- GetAssayData(new.data, slot = 'counts')
library(Biobase)
library(SummarizedExperiment)
test.predictions <- SingleR(test = new.data,
ref = ref.data,
labels = ref.data$label.main)
test.predictions <- SingleR(test = new.data,
assay.type.test=1,
ref = ref.data,
labels = ref.data$label.main)
test.predictions
new.data$singleR.labels <- test.predictions$labels[match(rownames(new.data), rownames(test.predictions))]
new.data$singleR.labels <- test.predictions$labels[match(rownames(new.data@metadata), rownames(test.predictions))]
library(Seurat)
BiocManager::install("Seurat")
library(Seurat)
DimPlot(new.data, reduction = 'umap', group.by = 'SingleR.labels')
new.data <- CreateSeuratObject(counts = new.data$counts, project = "new.data")
new.data <- TENxPBMCData("pbmc4")
test.data <- TENxPBMCData("pbmc4")
test.data <- TENxPBMCData("pbmc4")
ref.data <- CreateSeuratObject(counts = ref.data$counts, project = "ref.data")
HPCAD.ref <- HumanPrimaryCellAtlasData(ensembl = TRUE)
HPCAD.ref <- CreateSeuratObject(counts = HPCAD.ref$counts, project = "HPCAD.ref")
head(HPCAD.ref$counts)
HPCAD.ref <- celldex::HumanPrimaryCellAtlasData()
View(as.data.frame(colData(HPCAD.ref)))
head(HPCAD.ref$counts)
test.predictions <- SingleR(test = test.data,
assay.type.test = 1,
ref = HPCAD.ref,
labels = HPCAD.ref$label.main)
HPCAD.ref <- CreateSeuratObject(counts = HPCAD.ref$counts, project = "HPCAD.ref")
library(TENxPBMCData)
test.data <- TENxPBMCData("pbmc4")
HPCAD.ref <- HumanPrimaryCellAtlasData(ensembl = TRUE)
library(SingleR)
test.predictions <- SingleR(test=test.data, assay.type.test = 1, ref = HPCAD.ref, labels = HPCAD.ref$label.main)
HPCAD.ref$label.main
seurat_obj <- CreateSeuratObject(counts = new.data$counts,
assay = "RNA",
project = "pbmc4k")
seurat_obj <- CreateSeuratObject(counts = test.data$counts,
assay = "RNA",
project = "pbmc4k")
head(test.data$counts)
test.counts <- GetAssayData(test.data, slot = 'counts')
test.counts <- test.data$assays$RNA
test.predictions <- SingleR(test = test.counts,
assay.type.test = 1,
ref = HPCAD.ref,
labels = HPCAD.ref$label.main)
head(test.data$Sample)
head(test.data$Barcode)
head(test.data$Tissue_status)
head(test.data$Barcode_type)
head(test.data$Individual)
seurat_obj <- CreateSeuratObject(counts = test.data$counts,
assay = "RNA",
meta.data = test.data$meta.data)
test2.data <- TENxPBMCData(dataset = c("frozen_pbmc_donor_a"))
library(Seurat)
seurat_obj <- CreateSeuratObject(counts = test2.data$counts,
assay = "RNA",
meta.data = test2.data$meta.data)
colnames(test2.data$Barcode)
colnames(test2.data$meta.data)
test2.data
BiocManager::install("SeuratData")
library(SeuratData)
library(Seurat)
install.packages("SeuratData")
BiocManager::install("SeuratData")
library(SeuratData)
